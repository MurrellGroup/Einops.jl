var documenterSearchIndex = {"docs":
[{"location":"#Einops","page":"Home","title":"Einops","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Einops.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Einops.rearrange-Tuple{Any, Einops.Pattern}","page":"Home","title":"Einops.rearrange","text":"rearrange(x::AbstractArray, left => right)\n\nRearrange the axes of x according to the pattern specified by left => right.\n\nCan always be expressed as a reshape + permutedims + reshape.\n\nExamples\n\njulia> rearrange(rand(2,3,5), (:a, :b, :c) --> (:c, :b, :a)) |> size\n(5, 3, 2)\n\njulia> permutedims(rand(2,3,5), (3,2,1)) |> size\n(5, 3, 2)\n\njulia> rearrange(rand(2,3,35), (:a, :b, (:c, :d)) --> (:a, :d, (:c, :b)), c=5) |> size\n(2, 7, 15)\n\njulia> reshape(permutedims(reshape(rand(2,3,35), 2,3,5,7), (1,4,3,2)), 2,7,5*3) |> size\n(2, 7, 15)\n\n\n\n\n\n","category":"method"},{"location":"#Einops.@einops_str-Tuple{Any}","page":"Home","title":"Einops.@einops_str","text":"einops\"a (b c) -> (c b a)\"\neinops\"i j * k\"\n\nFor parity with Python implementation.\n\nExamples\n\njulia> einops\"a 1 b c -> (c b) a\"\n(:a, 1, :b, :c) --> ((:c, :b), :a)\n\njulia> einops\"embed token (head batch) -> (embed head) token batch\"\n(:embed, :token, (:head, :batch)) --> ((:embed, :head), :token, :batch)\n\njulia> einops\"i j * k\" # for packing\n(:i, :j, *, :k)\n\n\n\n\n\n","category":"macro"}]
}
